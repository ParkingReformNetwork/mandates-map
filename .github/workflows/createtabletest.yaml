name: Create Supabase Table

on:
  push:
    branches:
      - test_table_script

jobs:
  create-supabase-table:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
      PROJECT_ID: "oecrkeanazdxowjcpjqr"
      SUPABASE_API_URL: "https://oecrkeanazdxowjcpjqr.supabase.co"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Set up Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Init
        run: supabase init 

      - name: Configure Supabase
        run: supabase link --project-ref $PROJECT_ID 


      - name: Add Columns to Supabase Table
        run: |
          # Define the SQL statement to add columns to the table
          SQL_STATEMENT='ALTER TABLE reform_map_data
            ADD COLUMN new_column_name_1 text,
            ADD COLUMN new_column_name_2 integer;'

          # Execute the SQL statement using psql (assuming PostgreSQL)
          echo "$SQL_STATEMENT" | PGPASSWORD=$SUPABASE_API_KEY psql -U $SUPABASE_API_KEY -h $SUPABASE_API_URL -d $PROJECT_ID

      # - name: Create Supabase Table
      #   run: |
      #     TABLE_DEFINITION='[
      #       {
      #         "name": "reform_map_data",
      #         "columns": [
      #           {
      #             "name": "id",
      #             "type": "integer",
      #             "primary": true
      #           }
      #         ]
      #       }
      #     ]'

      #     curl -X POST -H "Content-Type: application/json" -H "apikey: $SUPABASE_API_KEY" -d "$TABLE_DEFINITION" "https://oecrkeanazdxowjcpjqr.supabase.co/rest/v1/tables"
